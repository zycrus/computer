// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    Not (in=sel[0], out=notsel0);
    Not (in=sel[1], out=notsel1);
    Not (in=sel[2], out=notsel2);


    And (a=notsel0, b=notsel1, out=and0);
    And (a=and0, b=notsel2, out=pos0);

    And (a=sel[0], b=notsel1, out=and1);
    And (a=and1, b=notsel2, out=pos1);

    And (a=notsel0, b=sel[1], out=and2);
    And (a=and2, b=notsel2, out=pos2);

    And (a=sel[0], b=sel[1], out=and3);
    And (a=and3, b=notsel2, out=pos3);

    And (a=notsel0, b=notsel1, out=and4);
    And (a=and4, b=sel[2], out=pos4);

    And (a=sel[0], b=notsel1, out=and5);
    And (a=and5, b=sel[2], out=pos5);

    And (a=notsel0, b=sel[1], out=and6);
    And (a=and6, b=sel[2], out=pos6);

    And (a=sel[0], b=sel[1], out=and7);
    And (a=and7, b=sel[2], out=pos7);

    And (a=in, b=pos0, out=a);
    And (a=in, b=pos1, out=b);
    And (a=in, b=pos2, out=c);
    And (a=in, b=pos3, out=d);
    And (a=in, b=pos4, out=e);
    And (a=in, b=pos5, out=f);
    And (a=in, b=pos6, out=g);
    And (a=in, b=pos7, out=h);

}